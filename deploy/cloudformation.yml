Description:  serverless event stack
Parameters:
  AppName:
    Description: lambda default name
    Type: String
    Default: serverless-event

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Join ['-', [!Ref AppName, 'lambda'] ]
      Runtime: nodejs16.x
      Handler: src/index.handler
      Timeout: 300
      Role: !GetAtt 'LambdaRole.Arn'
      Code:
        ZipFile: '../dist/'
      Tags:
        - Key: application
          Value: !Ref AppName
  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Join ['-', [!Ref AppName, 'api-gateway'] ]
      Description: Lambda proxy using quick create
      ProtocolType: HTTP
      Target: !GetAtt LambdaFunction.Arn
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunction
      Action: "lambda:InvokeFunction"
      Principal: apigateway.amazonaws.com
